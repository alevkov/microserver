{"version":3,"sources":["../src/events.js"],"names":["events","AWS","config","loadFromPath","ddb","DynamoDB","apiVersion","ddbc","DocumentClient","get","req","res","params","ExpressionAttributeValues","eventId","FilterExpression","ProjectionExpression","TableName","scan","err","result","console","log","status","send","message","data","post","Item","S","body","photoUrl","putItem","delete","itemsToDelete","i","Items","length","item","DeleteRequest","Key","push","delParams","RequestItems","batchWrite","deleteErr","deleteResult"],"mappings":"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","file":"events.js","sourcesContent":["import { Router } from 'express';\nimport AWS from 'aws-sdk';\nconst events = Router();\n\n// update AWS region\nAWS.config.loadFromPath('./secret/cred.json');\nconst ddb = new AWS.DynamoDB({apiVersion: '2012-08-10'});\nconst ddbc = new AWS.DynamoDB.DocumentClient();\n\n/**\n * GET photos by id\n */\nevents.get('/:eventId', (req, res) => {\n  const params = {\n    ExpressionAttributeValues: {\":eventId\": req.params.eventId},\n    FilterExpression: \"EventID = :eventId\",\n    ProjectionExpression: \"PhotoID\",\n    TableName: \"helios-photo\"\n  };\n\n  ddbc.scan(params, (err, result) => {\n    if(err) {\n      console.log(err);\n      res.status(500).send({ message: err });\n    } else {\n      res.status(200).send({ data: result });\n    }\n  });\n});\n\n/**\n * POST photo\n */\nevents.post('/:eventId', (req, res) => {\n  const params = {\n    TableName: 'helios-photo',\n    Item: {\n      'PhotoID': {S: req.body.photoUrl},\n      'EventID': {S: req.params.eventId}\n    }\n  }\n\n  ddb.putItem(params, (err, data) => {\n    if (err) {\n      console.log(\"Error\", err);\n      res.status(500).send({message: err});\n    } else {\n      console.log(\"Success\", data);\n      res.status(200).send({message: \"OK Boss\"});\n    }\n  });\n});\n\n/**\n * DELETE all photos by eventId\n */\nevents.delete('/:eventId', (req, res) => {\n  const params = {\n    ExpressionAttributeValues: {\":eventId\": req.params.eventId},\n    FilterExpression: \"EventID = :eventId\",\n    ProjectionExpression: \"PhotoID\",\n    TableName: \"helios-photo\"\n  };\n\n  ddbc.scan(params, (err, result) => {\n    if(err) {\n      console.log(err);\n      res.status(500).send({ message: err });\n    } else {\n      var itemsToDelete = []\n      for (var i = 0; i < result.Items.length; i++) {\n        const item = {\n          DeleteRequest: {\n            Key: result.Items[i]\n          }\n        }\n        itemsToDelete.push(item);\n      }\n      const delParams = {\n        RequestItems: {\n          'helios-photo': itemsToDelete\n        }\n      }\n      ddbc.batchWrite(delParams, (deleteErr, deleteResult) =>{\n        if (deleteErr) {\n          res.status(500).send({ message: deleteErr });\n        } else {\n          res.status(200).send({ message: deleteResult });\n        }\n      });\n    }\n  });\n});\n\nexport default events;"]}